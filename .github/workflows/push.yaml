name: Cross-Platform Rust Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Define the target platforms to build for
        target:
          - x86_64-unknown-linux-musl # Statically linked Linux binary
          - x86_64-pc-windows-gnu # Windows binary
          # Note: macOS builds typically require a macos-latest runner
          # - x86_64-apple-darwin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          # Install the necessary target-specific toolchains first
          targets: ${{ matrix.target }}

      - name: Install 'cross' for easy cross-compilation
        uses: taiki-e/install-action@cross

      - name: Build for target ${{ matrix.target }}
        # Use the 'cross' command instead of 'cargo'
        run: cross build --release --target ${{ matrix.target }}

      - name: Prepare artifact name
        id: artifact_name
        run: |
          APP_NAME="harbor-migration" # Explicitly define the app name
          EXTENSION=""
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            EXTENSION=".exe"
          fi
          echo "name=$APP_NAME-$EXTENSION" >> $GITHUB_OUTPUT
          echo "path=target/${{ matrix.target }}/release/$APP_NAME$EXTENSION" >> $GITHUB_OUTPUT

      - name: Upload artifact for ${{ matrix.target }}
        uses: actions/upload-artifact@v4
        with:
          # The artifact name will be something like 'harbor-migration-.exe-x86_64-pc-windows-gnu'
          name: ${{ steps.artifact_name.outputs.name }}-${{ matrix.target }}
          path: ${{ steps.artifact_name.outputs.path }}
